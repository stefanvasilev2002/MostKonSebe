import React, { useState } from 'react';
import { Brain, AlertTriangle, CheckCircle, BookOpen, Target } from 'lucide-react';

const Education = () => {
    const [completedModules, setCompletedModules] = useState(new Set());
    const [selectedModule, setSelectedModule] = useState(null);

    const hbscFindings = [
        {
            stat: '68%',
            description: '–æ–¥ –º–ª–∞–¥–∏—Ç–µ —á—É–≤—Å—Ç–≤—É–≤–∞–∞—Ç —Å–µ–º–µ—ò–Ω–∞ –ø–æ–¥–¥—Ä—à–∫–∞',
            trend: 'down',
            explanation: '–û–≤–∞ –µ –∑–Ω–∞—á–∏—Ç–µ–ª–Ω–æ –Ω–∞–º–∞–ª—É–≤–∞—ö–µ –æ–¥ 2018 –≥–æ–¥–∏–Ω–∞'
        },
        {
            stat: '‚Üë',
            description: '–ü—Ä–∏—Ç–∏—Å–æ–∫ –≤–æ —É—á–∏–ª–∏—à—Ç–µ —Å–µ –∑–≥–æ–ª–µ–º—É–≤–∞',
            trend: 'up',
            explanation: '–û—Å–æ–±–µ–Ω–æ –∫–∞—ò –¥–µ–≤–æ—ò—á–∏—ö–∞—Ç–∞, –∑–≥–æ–ª–µ–º—É–≤–∞—ö–µ—Ç–æ –µ –¥—Ä–∞–º–∞—Ç–∏—á–Ω–æ'
        },
        {
            stat: '32%',
            description: '–ø—Ä–∏—ò–∞–≤—É–≤–∞–∞—Ç —á–µ—Å—Ç–∏ —Ç–∞–∂–Ω–∏ —á—É–≤—Å—Ç–≤–∞',
            trend: 'up',
            explanation: '–û–≤–∞ –≤–ª–∏—ò–∞–µ –Ω–∞ —Å–µ–∫–æ—ò–¥–Ω–µ–≤–Ω–æ—Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–∞—ö–µ'
        },
        {
            stat: '25%',
            description: '–∏–º–∞–∞—Ç –ø—Ä–æ–±–ª–µ–º–∏ —Å–æ —Å–ø–∏–µ—ö–µ',
            trend: 'up',
            explanation: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫–æ—Ç –Ω–∞ —Å–æ–Ω –≤–ª–∏—ò–∞–µ –Ω–∞ –º–µ–Ω—Ç–∞–ª–Ω–æ—Ç–æ –∑–¥—Ä–∞–≤—ò–µ'
        }
    ];

    const educationModules = [
        {
            id: 'mental-health-basics',
            title: '–û—Å–Ω–æ–≤–∏ –Ω–∞ –º–µ–Ω—Ç–∞–ª–Ω–æ—Ç–æ –∑–¥—Ä–∞–≤—ò–µ',
            duration: '10 –º–∏–Ω',
            level: '–ü–æ—á–µ—Ç–Ω–æ',
            content: {
                sections: [
                    {
                        title: '–®—Ç–æ –µ –º–µ–Ω—Ç–∞–ª–Ω–æ –∑–¥—Ä–∞–≤—ò–µ?',
                        content: '–ú–µ–Ω—Ç–∞–ª–Ω–æ—Ç–æ –∑–¥—Ä–∞–≤—ò–µ –≤–∫–ª—É—á—É–≤–∞ –µ–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–æ, –ø—Å–∏—Ö–æ–ª–æ—à–∫–æ –∏ —Å–æ—Ü–∏—ò–∞–ª–Ω–æ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—ò—Å—Ç–≤–æ. –¢–æ–∞ –≤–ª–∏—ò–∞–µ –Ω–∞ —Ç–æ–∞ –∫–∞–∫–æ –º–∏—Å–ª–∏–º–µ, —á—É–≤—Å—Ç–≤—É–≤–∞–º–µ –∏ –ø–æ—Å—Ç–∞–ø—É–≤–∞–º–µ.'
                    },
                    {
                        title: '–ó–æ—à—Ç–æ –µ –≤–∞–∂–Ω–æ?',
                        content: '–î–æ–±—Ä–æ—Ç–æ –º–µ–Ω—Ç–∞–ª–Ω–æ –∑–¥—Ä–∞–≤—ò–µ –Ω–∏ –ø–æ–º–∞–≥–∞ –¥–∞ —Å–µ —Å–ø—Ä–∞–≤–∏–º–µ —Å–æ —Å—Ç—Ä–µ—Å–æ—Ç, –¥–∞ —Å–µ –ø–æ–≤—Ä–∑—É–≤–∞–º–µ —Å–æ –¥—Ä—É–≥–∏—Ç–µ –∏ –¥–∞ –¥–æ–Ω–µ—Å—É–≤–∞–º–µ –∑–¥—Ä–∞–≤–∏ –æ–¥–ª—É–∫–∏.'
                    }
                ]
            }
        },
        {
            id: 'stress-recognition',
            title: '–ü—Ä–µ–ø–æ–∑–Ω–∞–≤–∞—ö–µ –Ω–∞ —Å—Ç—Ä–µ—Å–æ—Ç',
            duration: '8 –º–∏–Ω',
            level: '–ü–æ—á–µ—Ç–Ω–æ',
            content: {
                sections: [
                    {
                        title: '–§–∏–∑–∏—á–∫–∏ –∑–Ω–∞—Ü–∏',
                        content: '–ì–ª–∞–≤–æ–±–æ–ª–∫–∞, –Ω–∞–ø–Ω–∞—Ç–æ—Å—Ç –≤–æ –º—É—Å–∫—É–ª–∏—Ç–µ, –ø—Ä–æ–±–ª–µ–º–∏ —Å–æ –∂–µ–ª—É–¥–Ω–∏–∫–æ—Ç, –ø—Ä–æ–º–µ–Ω–∏ –≤–æ –∞–ø–µ—Ç–∏—Ç–æ—Ç'
                    },
                    {
                        title: '–ï–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–∏ –∑–Ω–∞—Ü–∏',
                        content: '–õ—É—Ç–∏–Ω–∞, —Ä–∞–∑–¥—Ä–∞–∑–ª–∏–≤–æ—Å—Ç, –∞–Ω–∫—Å–∏–æ–∑–Ω–æ—Å—Ç, –¥–µ–ø—Ä–µ—Å–∏—ò–∞, —á—É–≤—Å—Ç–≤–æ –Ω–∞ –ø—Ä–µ–æ–ø—Ç–æ–≤–∞—Ä–µ–Ω–æ—Å—Ç'
                    }
                ]
            }
        },
        {
            id: 'coping-strategies',
            title: '–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∑–∞ —Å–ø—Ä–∞–≤—É–≤–∞—ö–µ',
            duration: '15 –º–∏–Ω',
            level: '–°—Ä–µ–¥–Ω–æ',
            content: {
                sections: [
                    {
                        title: '–ó–¥—Ä–∞–≤–∏ –º–µ—Ö–∞–Ω–∏–∑–º–∏',
                        content: '–§–∏–∑–∏—á–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç, –º–µ–¥–∏—Ç–∞—Ü–∏—ò–∞, —Ä–∞–∑–≥–æ–≤–æ—Ä —Å–æ –¥–æ–≤–µ—Ä–ª–∏–≤–∞ –ª–∏—á–Ω–æ—Å—Ç, –∫—Ä–µ–∞—Ç–∏–≤–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏'
                    },
                    {
                        title: '–®—Ç–æ –¥–∞ –∏–∑–±–µ–≥–Ω—É–≤–∞—Ç–µ',
                        content: '–ò–∑–æ–ª–∞—Ü–∏—ò–∞, –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–∞ –Ω–∞ —Å—É–ø—Å—Ç–∞–Ω—Ü–∏–∏, –Ω–µ–≥–∏—Ä–∞—ö–µ –Ω–∞ –ø—Ä–æ–±–ª–µ–º–æ—Ç'
                    }
                ]
            }
        }
    ];

    const completeModule = (moduleId) => {
        setCompletedModules(prev => new Set([...prev, moduleId]));
    };

    return (
        <div className="p-6 space-y-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">–ï–¥—É–∫–∞—Ü–∏—ò–∞ –∑–∞ –º–µ–Ω—Ç–∞–ª–Ω–æ –∑–¥—Ä–∞–≤—ò–µ</h2>

            {/* HBSC Statistics */}
            <div className="bg-white border rounded-lg p-4 shadow-sm">
                <h3 className="font-semibold text-gray-800 mb-4">üìä HBSC –ù–∞–æ–¥–∏ –∑–∞ –ú–∞–∫–µ–¥–æ–Ω–∏—ò–∞</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
                    {hbscFindings.map((finding, index) => (
                        <div key={index} className={`p-4 rounded-lg text-center ${
                            finding.trend === 'up' ? 'bg-red-50 border border-red-200' :
                                finding.trend === 'down' ? 'bg-orange-50 border border-orange-200' :
                                    'bg-blue-50 border border-blue-200'
                        }`}>
                            <div className={`text-3xl font-bold mb-2 ${
                                finding.trend === 'up' ? 'text-red-600' :
                                    finding.trend === 'down' ? 'text-orange-600' :
                                        'text-blue-600'
                            }`}>
                                {finding.stat}
                            </div>
                            <div className={`text-sm mb-2 ${
                                finding.trend === 'up' ? 'text-red-800' :
                                    finding.trend === 'down' ? 'text-orange-800' :
                                        'text-blue-800'
                            }`}>
                                {finding.description}
                            </div>
                            <div className="text-xs text-gray-600">
                                {finding.explanation}
                            </div>
                        </div>
                    ))}
                </div>
            </div>

            {/* Education Modules */}
            <div className="bg-white border rounded-lg p-4 shadow-sm">
                <h3 className="font-semibold text-gray-800 mb-4">üìö –ï–¥—É–∫–∞—Ü–∏—Å–∫–∏ –º–æ–¥—É–ª–∏</h3>
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                    {educationModules.map((module) => (
                        <div key={module.id} className="border rounded-lg p-4 hover:shadow-md transition-shadow">
                            <div className="flex items-start justify-between mb-3">
                                <h4 className="font-medium text-gray-800">{module.title}</h4>
                                {completedModules.has(module.id) && (
                                    <CheckCircle className="text-green-500" size={20} />
                                )}
                            </div>
                            <div className="space-y-2 mb-4">
                                <div className="flex items-center gap-2 text-sm text-gray-600">
                                    <Target size={16} />
                                    <span>{module.level}</span>
                                </div>
                                <div className="flex items-center gap-2 text-sm text-gray-600">
                                    <BookOpen size={16} />
                                    <span>{module.duration}</span>
                                </div>
                            </div>
                            <button
                                onClick={() => setSelectedModule(module)}
                                className="w-full bg-purple-500 text-white py-2 rounded-lg hover:bg-purple-600 transition-colors"
                            >
                                {completedModules.has(module.id) ? '–ü—Ä–µ–≥–ª–µ–¥–∞—ò –ø–æ–≤—Ç–æ—Ä–Ω–æ' : '–ó–∞–ø–æ—á–Ω–∏ –º–æ–¥—É–ª'}
                            </button>
                        </div>
                    ))}
                </div>
            </div>

            {/* Module Content Modal */}
            {selectedModule && (
                <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                    <div className="bg-white rounded-lg p-6 max-w-2xl w-full mx-4 max-h-96 overflow-y-auto">
                        <div className="flex items-center justify-between mb-4">
                            <h3 className="text-xl font-bold text-gray-800">{selectedModule.title}</h3>
                            <button
                                onClick={() => setSelectedModule(null)}
                                className="text-gray-500 hover:text-gray-700"
                            >
                                ‚úï
                            </button>
                        </div>
                        <div className="space-y-4">
                            {selectedModule.content.sections.map((section, index) => (
                                <div key={index}>
                                    <h4 className="font-semibold text-gray-800 mb-2">{section.title}</h4>
                                    <p className="text-gray-700 text-sm">{section.content}</p>
                                </div>
                            ))}
                        </div>
                        <div className="mt-6 flex gap-4">
                            <button
                                onClick={() => {
                                    completeModule(selectedModule.id);
                                    setSelectedModule(null);
                                }}
                                className="bg-green-500 text-white px-6 py-2 rounded-lg hover:bg-green-600"
                            >
                                –ó–∞–≤—Ä—à–∏ –º–æ–¥—É–ª
                            </button>
                            <button
                                onClick={() => setSelectedModule(null)}
                                className="bg-gray-500 text-white px-6 py-2 rounded-lg hover:bg-gray-600"
                            >
                                –ó–∞—Ç–≤–æ—Ä–∏
                            </button>
                        </div>
                    </div>
                </div>
            )}

            {/* Warning Signs */}
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="bg-white border rounded-lg p-4 shadow-sm">
                    <h3 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
                        <Brain className="text-blue-500" size={24} />
                        –®—Ç–æ –µ –º–µ–Ω—Ç–∞–ª–Ω–æ –∑–¥—Ä–∞–≤—ò–µ?
                    </h3>
                    <div className="space-y-3 text-sm">
                        <div className="flex items-start gap-3">
                            <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                            <div>
                                <p className="font-medium">–ï–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–æ –±–ª–∞–≥–æ—Å–æ—Å—Ç–æ—ò—Å—Ç–≤–æ</p>
                                <p className="text-gray-600">–ö–∞–∫–æ —Å–µ —á—É–≤—Å—Ç–≤—É–≤–∞—Ç–µ –∏ —É–ø—Ä–∞–≤—É–≤–∞—Ç–µ —Å–æ –µ–º–æ—Ü–∏–∏—Ç–µ</p>
                            </div>
                        </div>
                        <div className="flex items-start gap-3">
                            <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                            <div>
                                <p className="font-medium">–°–æ—Ü–∏—ò–∞–ª–Ω–∏ –æ–¥–Ω–æ—Å–∏</p>
                                <p className="text-gray-600">–ö–∞–∫–æ —Å–µ –ø–æ–≤—Ä–∑—É–≤–∞—Ç–µ —Å–æ –¥—Ä—É–≥–∏—Ç–µ –ª—É—ì–µ</p>
                            </div>
                        </div>
                        <div className="flex items-start gap-3">
                            <div className="w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                            <div>
                                <p className="font-medium">–°–ø—Ä–∞–≤—É–≤–∞—ö–µ —Å–æ –ø—Ä–µ–¥–∏–∑–≤–∏—Ü–∏</p>
                                <p className="text-gray-600">–ö–∞–∫–æ —Å–µ —Å–ø—Ä–∞–≤—É–≤–∞—Ç–µ —Å–æ —Å—Ç—Ä–µ—Å–æ—Ç –∏ –ø—Ä–æ–±–ª–µ–º–∏—Ç–µ</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div className="bg-white border rounded-lg p-4 shadow-sm">
                    <h3 className="font-semibold text-gray-800 mb-3 flex items-center gap-2">
                        <AlertTriangle className="text-red-500" size={24} />
                        –°–∏–≥–Ω–∞–ª–∏ –∑–∞ –ø–æ–º–æ—à
                    </h3>
                    <div className="space-y-2">
                        <div className="bg-red-50 p-3 rounded-lg">
                            <p className="text-sm text-red-800">üö® –ê–∫–æ —Å–µ —á—É–≤—Å—Ç–≤—É–≤–∞—Ç–µ –±–µ–∑–Ω–∞–¥–µ–∂–Ω–æ –∏–ª–∏ –∏–º–∞—Ç–µ –º–∏—Å–ª–∏ –∑–∞ —Å–∞–º–æ–ø–æ–≤—Ä–µ–¥—É–≤–∞—ö–µ</p>
                        </div>
                        <div className="bg-orange-50 p-3 rounded-lg">
                            <p className="text-sm text-orange-800">‚ö†Ô∏è –ê–∫–æ –Ω–µ –º–æ–∂–µ—Ç–µ –¥–∞ —Å–µ —Å–ø—Ä–∞–≤–∏—Ç–µ —Å–æ —Å–µ–∫–æ—ò–¥–Ω–µ–≤–Ω–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏</p>
                        </div>
                        <div className="bg-yellow-50 p-3 rounded-lg">
                            <p className="text-sm text-yellow-800">üíõ –ê–∫–æ —á—É–≤—Å—Ç–≤—É–≤–∞—Ç–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–∞ —Ç–∞–≥–∞ –∏–ª–∏ –∞–Ω–∫—Å–∏–æ–∑–Ω–æ—Å—Ç</p>
                        </div>
                    </div>
                    <div className="mt-4">
                        <button className="w-full bg-red-500 text-white py-2 rounded-lg hover:bg-red-600 transition-colors">
                            üÜò –ü–æ—Ç—Ä–µ–±–Ω–∞ –º–∏ –µ –ø–æ–º–æ—à –°–ï–ì–ê
                        </button>
                    </div>
                </div>
            </div>
        </div>
    );
};
export default Education;